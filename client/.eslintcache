[{"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\index.js":"1","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\App.js":"2","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\serviceWorker.js":"3","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\store.js":"4","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\HomePage.js":"5","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\actions\\authActions.js":"6","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\pages\\DoctorSearch.js":"7","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\pages\\DoctorBooking.js":"8","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\pages\\PatientBookings.js":"9","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\pages\\DoctorsList.js":"10","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\pages\\BookingForm.js":"11","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\pages\\DoctorDetail.js":"12","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\pages\\PatientProfile.js":"13","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\pages\\BookingConfirm.js":"14","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\routing\\PatientPrivateRoute.js":"15","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\routing\\DoctorPrivateRoute.js":"16","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\pages\\Video.js":"17","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\routing\\CombinedRoute.js":"18","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\Patients\\Patients.js":"19","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\Dashboard\\Dashboard.js":"20","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\DoctorAppointment\\DoctorAppointment.js":"21","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\PatientPanel.js":"22","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorPanel.js":"23","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\AppNavbar.js":"24","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\actions\\errorActions.js":"25","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\actions\\alertActions.js":"26","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\BookingItem.js":"27","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\actions\\patientActions.js":"28","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\actions\\types.js":"29","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\FilterPop.js":"30","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\actions\\appointmentActions.js":"31","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\ClinicInfo.js":"32","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\Doctor.js":"33","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorInfo.js":"34","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorFeedback.js":"35","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\reducers\\appointmentReducer.js":"36","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\FilesComponents\\FileUpload.js":"37","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\Dashboard\\Table.js":"38","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\DoctorAppointment\\AppointmentCalender.js":"39","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\actions\\doctorActions.js":"40","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\Sidebar\\Sidebar.js":"41","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\assets\\icons\\Icon.js":"42","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\reducers\\index.js":"43","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\pages\\DoctorFirstSubmit.js":"44","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\Dashboard\\AppointmentModal.js":"45","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\auth\\Logout.js":"46","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\auth\\LoginModal.js":"47","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\auth\\RegisterModal.js":"48","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\FilesComponents\\Progress.js":"49","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\FilesComponents\\Message.js":"50","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\actions\\uploadActions.js":"51","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\Dashboard\\PopUpAlert.js":"52","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\Dashboard\\ImageModal.js":"53","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\reducers\\ImageModalReducer.js":"54","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\reducers\\TableReducer.js":"55","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\reducers\\alertReducer.js":"56","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\reducers\\doctorReducer.js":"57","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\reducers\\authReducer.js":"58","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\reducers\\errorReducer.js":"59","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\Dashboard\\ExchangeLink.js":"60","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\Dashboard\\InsertField.js":"61"},{"size":522,"mtime":1602009745234,"results":"62","hashOfConfig":"63"},{"size":2803,"mtime":1607798853000,"results":"64","hashOfConfig":"63"},{"size":5086,"mtime":499162500000,"results":"65","hashOfConfig":"63"},{"size":403,"mtime":1605122012091,"results":"66","hashOfConfig":"63"},{"size":1511,"mtime":1607952731475,"results":"67","hashOfConfig":"63"},{"size":4369,"mtime":1605029351239,"results":"68","hashOfConfig":"63"},{"size":2789,"mtime":1607078945876,"results":"69","hashOfConfig":"63"},{"size":3359,"mtime":1607695018459,"results":"70","hashOfConfig":"63"},{"size":1345,"mtime":1607802696811,"results":"71","hashOfConfig":"63"},{"size":2150,"mtime":1605032465572,"results":"72","hashOfConfig":"63"},{"size":2648,"mtime":1605040150260,"results":"73","hashOfConfig":"63"},{"size":4244,"mtime":1604424130741,"results":"74","hashOfConfig":"63"},{"size":6387,"mtime":1605042249213,"results":"75","hashOfConfig":"63"},{"size":1403,"mtime":1605041611125,"results":"76","hashOfConfig":"63"},{"size":814,"mtime":1607191963895,"results":"77","hashOfConfig":"63"},{"size":914,"mtime":1607191996982,"results":"78","hashOfConfig":"63"},{"size":17995,"mtime":1607704998626,"results":"79","hashOfConfig":"63"},{"size":739,"mtime":1607540301030,"results":"80","hashOfConfig":"63"},{"size":1935,"mtime":1607883816491,"results":"81","hashOfConfig":"63"},{"size":5618,"mtime":1607948656567,"results":"82","hashOfConfig":"63"},{"size":2666,"mtime":1607803322195,"results":"83","hashOfConfig":"63"},{"size":237,"mtime":1604434236302,"results":"84","hashOfConfig":"63"},{"size":1063,"mtime":1607077289945,"results":"85","hashOfConfig":"63"},{"size":3882,"mtime":1605035789428,"results":"86","hashOfConfig":"63"},{"size":327,"mtime":1601295411203,"results":"87","hashOfConfig":"63"},{"size":367,"mtime":1602777446172,"results":"88","hashOfConfig":"63"},{"size":2889,"mtime":1607703357685,"results":"89","hashOfConfig":"63"},{"size":2530,"mtime":1607791045109,"results":"90","hashOfConfig":"63"},{"size":2090,"mtime":1607701128846,"results":"91","hashOfConfig":"63"},{"size":5510,"mtime":1604424130741,"results":"92","hashOfConfig":"63"},{"size":6369,"mtime":1607798279056,"results":"93","hashOfConfig":"63"},{"size":567,"mtime":1584344642000,"results":"94","hashOfConfig":"63"},{"size":2128,"mtime":1604076469107,"results":"95","hashOfConfig":"63"},{"size":3075,"mtime":1603397571684,"results":"96","hashOfConfig":"63"},{"size":2811,"mtime":1604344825747,"results":"97","hashOfConfig":"63"},{"size":1437,"mtime":1607701170775,"results":"98","hashOfConfig":"63"},{"size":3305,"mtime":1605287992358,"results":"99","hashOfConfig":"63"},{"size":3149,"mtime":1607888210089,"results":"100","hashOfConfig":"63"},{"size":1287,"mtime":1607791631174,"results":"101","hashOfConfig":"63"},{"size":2092,"mtime":1607803477498,"results":"102","hashOfConfig":"63"},{"size":2282,"mtime":1607888221314,"results":"103","hashOfConfig":"63"},{"size":838,"mtime":1605116464981,"results":"104","hashOfConfig":"63"},{"size":621,"mtime":1607948620868,"results":"105","hashOfConfig":"63"},{"size":4521,"mtime":1604427083963,"results":"106","hashOfConfig":"63"},{"size":7431,"mtime":1607798491000,"results":"107","hashOfConfig":"63"},{"size":646,"mtime":1607079177872,"results":"108","hashOfConfig":"63"},{"size":4666,"mtime":1602340013142,"results":"109","hashOfConfig":"63"},{"size":6202,"mtime":1604773565774,"results":"110","hashOfConfig":"63"},{"size":449,"mtime":1604508879050,"results":"111","hashOfConfig":"63"},{"size":493,"mtime":1554840196000,"results":"112","hashOfConfig":"63"},{"size":1296,"mtime":1604676259027,"results":"113","hashOfConfig":"63"},{"size":419,"mtime":1605887668037,"results":"114","hashOfConfig":"63"},{"size":741,"mtime":1605725584273,"results":"115","hashOfConfig":"63"},{"size":408,"mtime":1605125816758,"results":"116","hashOfConfig":"63"},{"size":5154,"mtime":1607803603978,"results":"117","hashOfConfig":"63"},{"size":406,"mtime":1602003556057,"results":"118","hashOfConfig":"63"},{"size":1633,"mtime":1607190209324,"results":"119","hashOfConfig":"63"},{"size":2151,"mtime":1605125586861,"results":"120","hashOfConfig":"63"},{"size":647,"mtime":1601653646034,"results":"121","hashOfConfig":"63"},{"size":341,"mtime":1514564053000,"results":"122","hashOfConfig":"63"},{"size":2968,"mtime":1607803297218,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"290swn",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"126"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"126"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"126"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"126"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"126"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"126"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"126"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"126"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"126"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"126"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"126"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"126"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"126"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"126"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"126"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"126"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"126"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"126"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\index.js",[],["265","266"],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\App.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\serviceWorker.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\store.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\HomePage.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\actions\\authActions.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\pages\\DoctorSearch.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\pages\\DoctorBooking.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\pages\\PatientBookings.js",["267","268","269","270","271"],"import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect, useDispatch } from 'react-redux';\nimport { getPatientAppointments } from '../../actions/appointmentActions';\n\nimport AppNavbar from '../AppNavbar';\nimport BookingItem from '../BookingItem';\nimport appointment from '../../reducers/appointmentReducer';\nconst PatientBookings = ({appointments, getPatientAppointments,user, location}) => {\n  \n  const {id} = user || location.state.user;\n  \n      useEffect(() => {\n        getPatientAppointments(id);    \n      }, []); \n\n  return (\n    <div className=\"Bookings\">\n      <AppNavbar bg=\"#e0fdf7\" title=\"Your Bookings\" backBtn=\"/\" />\n      <div className=\"container\"> \n      {/* {appointments.length === 0 ?\n      <h1>You don't have any upcoming appointments!</h1> :\n\n      {appointments.map((appointment)=>\n        <BookingItem key={appointment._id} appointment={appointment}) />\n      } \n    }\n       */}\n        \n      \n            \n      </div>\n    </div>\n  );\n};\n\nPatientBookings.propTypes = {\n  appointments: PropTypes.array.isRequired,\n  getPatientAppointments: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  appointments: state.appointment.appointments,\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps, { getPatientAppointments })(PatientBookings);\n","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\pages\\DoctorsList.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\pages\\BookingForm.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\pages\\DoctorDetail.js",["272","273"],"import React, { Component,useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport DoctorInfo from '../DoctorInfo';\r\nimport DoctorFeedback from '../DoctorFeedback';\r\nimport ClinicInfo from '../ClinicInfo';\r\nimport AppNavbar from '../AppNavbar';\r\n\r\nimport email from '../../assets/images/email.png';\r\nimport like from '../../assets/images/like.png';\r\nimport callAnswer from '../../assets/images/call-answer.png';\r\n\r\nimport { getSingleDoctor } from '../../actions/patientActions';\r\nclass DoctorDetail extends Component  {\r\n  state={\r\n    doctor:{},\r\n    tab: null\r\n\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({doctor:this.props.location.state.doctor, tab: 0} ||{doctor:this.props.singleDoc, tab: 0}) ; // In the ||, set default state.\r\n    this.props.history.replace(this.props.location.pathname, this.state); // Update state of current entry in history stack.\r\n  }\r\n  componentDidMount(){\r\n    this.props.getSingleDoctor(this.state.doctor._id);\r\n  }\r\n  \r\n   renderTab = ({ phone, address }) => {\r\n    switch (this.state.tab) {\r\n      case 0:\r\n        return <DoctorInfo />;\r\n      case 1:\r\n        return <ClinicInfo phone={phone} address={address} />;\r\n      case 2:\r\n        return <DoctorFeedback />;\r\n      default:\r\n        return 0;\r\n    }\r\n  };\r\n  handleClick = (e) => {\r\n    const id = parseInt(e.target.id.split('-')[1]);\r\n    this.setState({tab:id});\r\n  };\r\n\r\n  \r\nrender(){\r\n  const singleDoctor = this.state.doctor;\r\n  return (\r\n    <div className=\"DoctorDetail\">\r\n      <AppNavbar bg=\"#266a61\" title=\"Details\" backBtn=\"/doctors\" />\r\n      {singleDoctor && (\r\n        <div>\r\n          <div className=\"detail-card\">\r\n            <div className=\"DoctorDetail-info\">\r\n              <h4 className=\"title text-white font-weight-bold\">\r\n                {`Dr. ${singleDoctor.name}`}\r\n              </h4>\r\n              <div className=\"d-flex justify-content-center align-items-center\">\r\n                <img className=\"cta\" src={callAnswer} alt=\"Call Answer\" />\r\n                <img className=\"avatar\" src={singleDoctor.image} alt=\"Avatar\" />\r\n                <img className=\"cta\" src={email} alt=\"email\" />\r\n              </div>\r\n              <p className=\"category\">{singleDoctor.category}</p>\r\n              <div className=\"d-flex exp\">\r\n                <p>{`$${singleDoctor.fee}`}</p>\r\n                <p>{`${singleDoctor.exp} yrs of experience`}</p>\r\n                <p>\r\n                  <img src={like} alt=\"likes\" />\r\n                  <span>{singleDoctor.likes}</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"container d-flex tab-content\">\r\n            <button\r\n              type=\"submit\"\r\n              className={`tab flex-grow-1 ${this.state.tab === 0 ? 'tab-focus' : ''}`}\r\n              id=\"tab-0\"\r\n              onClick={e => this.handleClick(e)}\r\n            >\r\n              Doctor Info\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className={`tab flex-grow-1 ${this.state.tab === 1 ? 'tab-focus' : ''}`}\r\n              id=\"tab-1\"\r\n              onClick={e => this.handleClick(e)}\r\n            >\r\n              Clinic Info\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className={`tab flex-grow-1 ${this.state.tab === 2 ? 'tab-focus' : ''}`}\r\n              id=\"tab-2\"\r\n              onClick={e => this.handleClick(e)}\r\n            >\r\n              Feedback\r\n            </button>\r\n          </div>\r\n          {this.renderTab(singleDoctor)}\r\n          <Link\r\n            to={{\r\n              pathname: `/doctors/${singleDoctor._id}/book`,\r\n              state: { doctor: singleDoctor },\r\n            }}\r\n            className=\"book-btn\"\r\n          >\r\n            Book Appointment\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}}\r\n\r\nDoctorDetail.propTypes = {\r\n  getSingleDoctor: PropTypes.func.isRequired,\r\n  singleDoctor: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  singleDoc: state.doctor.singleDoctor,\r\n  \r\n});\r\n\r\nexport default connect  (mapStateToProps, { getSingleDoctor })(DoctorDetail);","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\pages\\PatientProfile.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\pages\\BookingConfirm.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\routing\\PatientPrivateRoute.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\routing\\DoctorPrivateRoute.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\pages\\Video.js",["274","275","276","277"],"import React, { Component } from 'react'\r\nimport io from 'socket.io-client'\r\nimport faker from \"faker\"\r\n\r\nimport {IconButton, Badge, Input, Button} from '@material-ui/core'\r\nimport VideocamIcon from '@material-ui/icons/Videocam'\r\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff'\r\nimport MicIcon from '@material-ui/icons/Mic'\r\nimport MicOffIcon from '@material-ui/icons/MicOff'\r\nimport ScreenShareIcon from '@material-ui/icons/ScreenShare'\r\nimport StopScreenShareIcon from '@material-ui/icons/StopScreenShare'\r\nimport CallEndIcon from '@material-ui/icons/CallEnd'\r\nimport ChatIcon from '@material-ui/icons/Chat'\r\n\r\nimport { message } from 'antd'\r\nimport 'antd/dist/antd.css'\r\n\r\nimport { Row } from 'reactstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport \"./Video.css\"\r\n\r\nconst server_url = process.env.NODE_ENV === 'production' ? 'https://video.sebastienbiollo.com' : \"http://localhost:5000\"\r\n\r\nvar connections = {}\r\nconst peerConnectionConfig = {\r\n\t'iceServers': [\r\n\t\t// { 'urls': 'stun:stun.services.mozilla.com' },\r\n\t\t{ 'urls': 'stun:stun.l.google.com:19302' },\r\n\t]\r\n}\r\nvar socket = null\r\nvar socketId = null\r\nvar elms = 0\r\n\r\nclass Video extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.localVideoref = React.createRef()\r\n\r\n\t\tthis.videoAvailable = false\r\n\t\tthis.audioAvailable = false\r\n\r\n\t\tthis.state = {\r\n\t\t\tvideo: false,\r\n\t\t\taudio: false,\r\n\t\t\tscreen: false,\r\n\t\t\tshowModal: false,\r\n\t\t\tscreenAvailable: false,\r\n\t\t\tmessages: [],\r\n\t\t\tmessage: \"\",\r\n\t\t\tnewmessages: 0,\r\n\t\t\taskForUsername: true,\r\n\t\t\tusername: faker.internet.userName(),\r\n\t\t}\r\n\t\tconnections = {}\r\n\r\n\t\tthis.getPermissions()\r\n\t}\r\n\r\n\tgetPermissions = async () => {\r\n\t\ttry{\r\n\t\t\tawait navigator.mediaDevices.getUserMedia({ video: true })\r\n\t\t\t\t.then(() => this.videoAvailable = true)\r\n\t\t\t\t.catch(() => this.videoAvailable = false)\r\n\r\n\t\t\tawait navigator.mediaDevices.getUserMedia({ audio: true })\r\n\t\t\t\t.then(() => this.audioAvailable = true)\r\n\t\t\t\t.catch(() => this.audioAvailable = false)\r\n\r\n\t\t\tif (navigator.mediaDevices.getDisplayMedia) {\r\n\t\t\t\tthis.setState({ screenAvailable: true })\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({ screenAvailable: false })\r\n\t\t\t}\r\n\r\n\t\t\tif (this.videoAvailable || this.audioAvailable) {\r\n\t\t\t\tnavigator.mediaDevices.getUserMedia({ video: this.videoAvailable, audio: this.audioAvailable })\r\n\t\t\t\t\t.then((stream) => {\r\n\t\t\t\t\t\twindow.localStream = stream\r\n\t\t\t\t\t\tthis.localVideoref.current.srcObject = stream\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((stream) => {})\r\n\t\t\t\t\t.catch((e) => console.log(e))\r\n\t\t\t}\r\n\t\t} catch(e) { console.log(e) }\r\n\t}\r\n\r\n\tgetMedia = () => {\r\n\t\tthis.setState({\r\n\t\t\tvideo: this.videoAvailable,\r\n\t\t\taudio: this.audioAvailable\r\n\t\t}, () => {\r\n\t\t\tthis.getUserMedia()\r\n\t\t\tthis.connectToSocketServer()\r\n\t\t})\r\n\t}\r\n\r\n\tgetUserMedia = () => {\r\n\t\tif ((this.state.video && this.videoAvailable) || (this.state.audio && this.audioAvailable)) {\r\n\t\t\tnavigator.mediaDevices.getUserMedia({ video: this.state.video, audio: this.state.audio })\r\n\t\t\t\t.then(this.getUserMediaSuccess)\r\n\t\t\t\t.then((stream) => {})\r\n\t\t\t\t.catch((e) => console.log(e))\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tlet tracks = this.localVideoref.current.srcObject.getTracks()\r\n\t\t\t\ttracks.forEach(track => track.stop())\r\n\t\t\t} catch (e) {}\r\n\t\t}\r\n\t}\r\n\r\n\tgetUserMediaSuccess = (stream) => {\r\n\t\ttry {\r\n\t\t\twindow.localStream.getTracks().forEach(track => track.stop())\r\n\t\t} catch(e) { console.log(e) }\r\n\r\n\t\twindow.localStream = stream\r\n\t\tthis.localVideoref.current.srcObject = stream\r\n\r\n\t\tfor (let id in connections) {\r\n\t\t\tif (id === socketId) continue\r\n\r\n\t\t\tconnections[id].addStream(window.localStream)\r\n\r\n\t\t\tconnections[id].createOffer().then((description) => {\r\n\t\t\t\tconnections[id].setLocalDescription(description)\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\tsocket.emit('signal', id, JSON.stringify({ 'sdp': connections[id].localDescription }))\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(e => console.log(e))\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tstream.getTracks().forEach(track => track.onended = () => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tvideo: false,\r\n\t\t\t\taudio: false,\r\n\t\t\t}, () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet tracks = this.localVideoref.current.srcObject.getTracks()\r\n\t\t\t\t\ttracks.forEach(track => track.stop())\r\n\t\t\t\t} catch(e) { console.log(e) }\r\n\r\n\t\t\t\tlet blackSilence = (...args) => new MediaStream([this.black(...args), this.silence()])\r\n\t\t\t\twindow.localStream = blackSilence()\r\n\t\t\t\tthis.localVideoref.current.srcObject = window.localStream\r\n\r\n\t\t\t\tfor (let id in connections) {\r\n\t\t\t\t\tconnections[id].addStream(window.localStream)\r\n\r\n\t\t\t\t\tconnections[id].createOffer().then((description) => {\r\n\t\t\t\t\t\tconnections[id].setLocalDescription(description)\r\n\t\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\t\tsocket.emit('signal', id, JSON.stringify({ 'sdp': connections[id].localDescription }))\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch(e => console.log(e))\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\tgetDislayMedia = () => {\r\n\t\tif (this.state.screen) {\r\n\t\t\tif (navigator.mediaDevices.getDisplayMedia) {\r\n\t\t\t\tnavigator.mediaDevices.getDisplayMedia({ video: true, audio: true })\r\n\t\t\t\t\t.then(this.getDislayMediaSuccess)\r\n\t\t\t\t\t.then((stream) => {})\r\n\t\t\t\t\t.catch((e) => console.log(e))\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetDislayMediaSuccess = (stream) => {\r\n\t\ttry {\r\n\t\t\twindow.localStream.getTracks().forEach(track => track.stop())\r\n\t\t} catch(e) { console.log(e) }\r\n\r\n\t\twindow.localStream = stream\r\n\t\tthis.localVideoref.current.srcObject = stream\r\n\r\n\t\tfor (let id in connections) {\r\n\t\t\tif (id === socketId) continue\r\n\r\n\t\t\tconnections[id].addStream(window.localStream)\r\n\r\n\t\t\tconnections[id].createOffer().then((description) => {\r\n\t\t\t\tconnections[id].setLocalDescription(description)\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\tsocket.emit('signal', id, JSON.stringify({ 'sdp': connections[id].localDescription }))\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(e => console.log(e))\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tstream.getTracks().forEach(track => track.onended = () => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tscreen: false,\r\n\t\t\t}, () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet tracks = this.localVideoref.current.srcObject.getTracks()\r\n\t\t\t\t\ttracks.forEach(track => track.stop())\r\n\t\t\t\t} catch(e) { console.log(e) }\r\n\r\n\t\t\t\tlet blackSilence = (...args) => new MediaStream([this.black(...args), this.silence()])\r\n\t\t\t\twindow.localStream = blackSilence()\r\n\t\t\t\tthis.localVideoref.current.srcObject = window.localStream\r\n\r\n\t\t\t\tthis.getUserMedia()\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\tgotMessageFromServer = (fromId, message) => {\r\n\t\tvar signal = JSON.parse(message)\r\n\r\n\t\tif (fromId !== socketId) {\r\n\t\t\tif (signal.sdp) {\r\n\t\t\t\tconnections[fromId].setRemoteDescription(new RTCSessionDescription(signal.sdp)).then(() => {\r\n\t\t\t\t\tif (signal.sdp.type === 'offer') {\r\n\t\t\t\t\t\tconnections[fromId].createAnswer().then((description) => {\r\n\t\t\t\t\t\t\tconnections[fromId].setLocalDescription(description).then(() => {\r\n\t\t\t\t\t\t\t\tsocket.emit('signal', fromId, JSON.stringify({ 'sdp': connections[fromId].localDescription }))\r\n\t\t\t\t\t\t\t}).catch(e => console.log(e))\r\n\t\t\t\t\t\t}).catch(e => console.log(e))\r\n\t\t\t\t\t}\r\n\t\t\t\t}).catch(e => console.log(e))\r\n\t\t\t}\r\n\r\n\t\t\tif (signal.ice) {\r\n\t\t\t\tconnections[fromId].addIceCandidate(new RTCIceCandidate(signal.ice)).catch(e => console.log(e))\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tchangeCssVideos = (main) => {\r\n\t\tlet widthMain = main.offsetWidth\r\n\t\tlet minWidth = \"30%\"\r\n\t\tif ((widthMain * 30 / 100) < 300) {\r\n\t\t\tminWidth = \"300px\"\r\n\t\t}\r\n\t\tlet minHeight = \"40%\"\r\n\r\n\t\tlet height = String(100 / elms) + \"%\"\r\n\t\tlet width = \"\"\r\n\t\tif(elms === 0 || elms === 1) {\r\n\t\t\twidth = \"100%\"\r\n\t\t\theight = \"100%\"\r\n\t\t} else if (elms === 2) {\r\n\t\t\twidth = \"45%\"\r\n\t\t\theight = \"100%\"\r\n\t\t} else if (elms === 3 || elms === 4) {\r\n\t\t\twidth = \"35%\"\r\n\t\t\theight = \"50%\"\r\n\t\t} else {\r\n\t\t\twidth = String(100 / elms) + \"%\"\r\n\t\t}\r\n\r\n\t\tlet videos = main.querySelectorAll(\"video\")\r\n\t\tfor (let a = 0; a < videos.length; ++a) {\r\n\t\t\tvideos[a].style.minWidth = minWidth\r\n\t\t\tvideos[a].style.minHeight = minHeight\r\n\t\t\tvideos[a].style.setProperty(\"width\", width)\r\n\t\t\tvideos[a].style.setProperty(\"height\", height)\r\n\t\t}\r\n\r\n\t\treturn {minWidth, minHeight, width, height}\r\n\t}\r\n\r\n\tconnectToSocketServer = () => {\r\n\t\tsocket = io.connect(server_url, { secure: true })\r\n\r\n\t\tsocket.on('signal', this.gotMessageFromServer)\r\n\r\n\t\tsocket.on('connect', () => {\r\n\t\t\tsocket.emit('join-call', window.location.href)\r\n\t\t\tsocketId = socket.id\r\n\r\n\t\t\tsocket.on('chat-message', this.addMessage)\r\n\r\n\t\t\tsocket.on('user-left', (id) => {\r\n\t\t\t\tlet video = document.querySelector(`[data-socket=\"${id}\"]`)\r\n\t\t\t\tif (video !== null) {\r\n\t\t\t\t\telms--\r\n\t\t\t\t\tvideo.parentNode.removeChild(video)\r\n\r\n\t\t\t\t\tlet main = document.getElementById('main')\r\n\t\t\t\t\tthis.changeCssVideos(main)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tsocket.on('user-joined', (id, clients) => {\r\n\t\t\t\tclients.forEach((socketListId) => {\r\n\t\t\t\t\tconnections[socketListId] = new RTCPeerConnection(peerConnectionConfig)\r\n\t\t\t\t\t// Wait for their ice candidate       \r\n\t\t\t\t\tconnections[socketListId].onicecandidate = function (event) {\r\n\t\t\t\t\t\tif (event.candidate != null) {\r\n\t\t\t\t\t\t\tsocket.emit('signal', socketListId, JSON.stringify({ 'ice': event.candidate }))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Wait for their video stream\r\n\t\t\t\t\tconnections[socketListId].onaddstream = (event) => {\r\n\t\t\t\t\t\t// TODO mute button, full screen button\r\n\t\t\t\t\t\tvar searchVidep = document.querySelector(`[data-socket=\"${socketListId}\"]`)\r\n\t\t\t\t\t\tif (searchVidep !== null) { // if i don't do this check it make an empyt square\r\n\t\t\t\t\t\t\tsearchVidep.srcObject = event.stream\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\telms = clients.length\r\n\t\t\t\t\t\t\tlet main = document.getElementById('main')\r\n\t\t\t\t\t\t\tlet cssMesure = this.changeCssVideos(main)\r\n\r\n\t\t\t\t\t\t\tlet video = document.createElement('video')\r\n\r\n\t\t\t\t\t\t\tlet css = {minWidth: cssMesure.minWidth, minHeight: cssMesure.minHeight, maxHeight: \"100%\", margin: \"10px\",\r\n\t\t\t\t\t\t\t\tborderStyle: \"solid\", borderColor: \"#bdbdbd\", objectFit: \"fill\"}\r\n\t\t\t\t\t\t\tfor(let i in css) video.style[i] = css[i]\r\n\r\n\t\t\t\t\t\t\tvideo.style.setProperty(\"width\", cssMesure.width)\r\n\t\t\t\t\t\t\tvideo.style.setProperty(\"height\", cssMesure.height)\r\n\t\t\t\t\t\t\tvideo.setAttribute('data-socket', socketListId)\r\n\t\t\t\t\t\t\tvideo.srcObject = event.stream\r\n\t\t\t\t\t\t\tvideo.autoplay = true\r\n\t\t\t\t\t\t\tvideo.playsinline = true\r\n\r\n\t\t\t\t\t\t\tmain.appendChild(video)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Add the local video stream\r\n\t\t\t\t\tif (window.localStream !== undefined && window.localStream !== null) {\r\n\t\t\t\t\t\tconnections[socketListId].addStream(window.localStream)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet blackSilence = (...args) => new MediaStream([this.black(...args), this.silence()])\r\n\t\t\t\t\t\twindow.localStream = blackSilence()\r\n\t\t\t\t\t\tconnections[socketListId].addStream(window.localStream)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tif (id === socketId) {\r\n\t\t\t\t\tfor (let id2 in connections) {\r\n\t\t\t\t\t\tif (id2 === socketId) continue\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tconnections[id2].addStream(window.localStream)\r\n\t\t\t\t\t\t} catch(e) {}\r\n\t\t\t\r\n\t\t\t\t\t\tconnections[id2].createOffer().then((description) => {\r\n\t\t\t\t\t\t\tconnections[id2].setLocalDescription(description)\r\n\t\t\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\t\t\tsocket.emit('signal', id2, JSON.stringify({ 'sdp': connections[id2].localDescription }))\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.catch(e => console.log(e))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\tsilence = () => {\r\n\t\tlet ctx = new AudioContext()\r\n\t\tlet oscillator = ctx.createOscillator()\r\n\t\tlet dst = oscillator.connect(ctx.createMediaStreamDestination())\r\n\t\toscillator.start()\r\n\t\tctx.resume()\r\n\t\treturn Object.assign(dst.stream.getAudioTracks()[0], { enabled: false })\r\n\t}\r\n\tblack = ({ width = 640, height = 480 } = {}) => {\r\n\t\tlet canvas = Object.assign(document.createElement(\"canvas\"), { width, height })\r\n\t\tcanvas.getContext('2d').fillRect(0, 0, width, height)\r\n\t\tlet stream = canvas.captureStream()\r\n\t\treturn Object.assign(stream.getVideoTracks()[0], { enabled: false })\r\n\t}\r\n\r\n\thandleVideo = () => this.setState({ video: !this.state.video }, () => this.getUserMedia())\r\n\thandleAudio = () => this.setState({ audio: !this.state.audio }, () => this.getUserMedia())\r\n\thandleScreen = () => this.setState({ screen: !this.state.screen }, () => this.getDislayMedia())\r\n\r\n\thandleEndCall = () => {\r\n\t\ttry {\r\n\t\t\tlet tracks = this.localVideoref.current.srcObject.getTracks()\r\n\t\t\ttracks.forEach(track => track.stop())\r\n\t\t} catch (e) {}\r\n\t\twindow.location.href = \"/\"\r\n\t}\r\n\r\n\topenChat = () => this.setState({ showModal: true, newmessages: 0 })\r\n\tcloseChat = () => this.setState({ showModal: false })\r\n\thandleMessage = (e) => this.setState({ message: e.target.value })\r\n\r\n\taddMessage = (data, sender, socketIdSender) => {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tmessages: [...prevState.messages, { \"sender\": sender, \"data\": data }],\r\n\t\t}))\r\n\t\tif (socketIdSender !== socketId) {\r\n\t\t\tthis.setState({ newmessages: this.state.newmessages + 1 })\r\n\t\t}\r\n\t}\r\n\r\n\thandleUsername = (e) => this.setState({ username: e.target.value })\r\n\r\n\tsendMessage = () => {\r\n\t\tsocket.emit('chat-message', this.state.message, this.state.username)\r\n\t\tthis.setState({ message: \"\", sender: this.state.username })\r\n\t}\r\n\r\n\tcopyUrl = () => {\r\n\t\tlet text = window.location.href\r\n\t\tif (!navigator.clipboard) {\r\n\t\t\tlet textArea = document.createElement(\"textarea\")\r\n\t\t\ttextArea.value = text\r\n\t\t\tdocument.body.appendChild(textArea)\r\n\t\t\ttextArea.focus()\r\n\t\t\ttextArea.select()\r\n\t\t\ttry {\r\n\t\t\t\tdocument.execCommand('copy')\r\n\t\t\t\tmessage.success(\"Link copied to clipboard!\")\r\n\t\t\t} catch (err) {\r\n\t\t\t\tmessage.error(\"Failed to copy\")\r\n\t\t\t}\r\n\t\t\tdocument.body.removeChild(textArea)\r\n\t\t\treturn\r\n\t\t}\r\n\t\tnavigator.clipboard.writeText(text).then(function () {\r\n\t\t\tmessage.success(\"Link copied to clipboard!\")\r\n\t\t}, () => {\r\n\t\t\tmessage.error(\"Failed to copy\")\r\n\t\t})\r\n\t}\r\n\r\n\tconnect = () => this.setState({ askForUsername: false }, () => this.getMedia())\r\n\r\n\tisChrome = function () {\r\n\t\tlet userAgent = (navigator && (navigator.userAgent || '')).toLowerCase()\r\n\t\tlet vendor = (navigator && (navigator.vendor || '')).toLowerCase()\r\n\t\tlet matchChrome = /google inc/.test(vendor) ? userAgent.match(/(?:chrome|crios)\\/(\\d+)/) : null\r\n\t\t// let matchFirefox = userAgent.match(/(?:firefox|fxios)\\/(\\d+)/)\r\n\t\t// return matchChrome !== null || matchFirefox !== null\r\n\t\treturn matchChrome !== null\r\n\t}\r\n\r\n\trender() {\r\n\t\t// if(this.isChrome() === false){\r\n\t\t// \treturn (\r\n\t\t// \t\t<div style={{background: \"white\", width: \"30%\", height: \"auto\", padding: \"20px\", minWidth: \"400px\",\r\n\t\t// \t\t\t\ttextAlign: \"center\", margin: \"auto\", marginTop: \"50px\", justifyContent: \"center\"}}>\r\n\t\t// \t\t\t<h1>Sorry, this works only with Google Chrome</h1>\r\n\t\t// \t\t</div>\r\n\t\t// \t)\r\n\t\t// }\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{this.state.askForUsername === true ?\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div style={{background: \"white\", width: \"30%\", height: \"auto\", padding: \"20px\", minWidth: \"400px\",\r\n\t\t\t\t\t\t\t\ttextAlign: \"center\", margin: \"auto\", marginTop: \"50px\", justifyContent: \"center\"}}>\r\n\t\t\t\t\t\t\t<p style={{ margin: 0, fontWeight: \"bold\", paddingRight: \"50px\" }}>Set your username</p>\r\n\t\t\t\t\t\t\t<Input placeholder=\"Username\" value={this.state.username} onChange={e => this.handleUsername(e)} />\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={this.connect} style={{ margin: \"20px\" }}>Connect</Button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div style={{ justifyContent: \"center\", textAlign: \"center\", paddingTop: \"40px\" }}>\r\n\t\t\t\t\t\t\t<video id=\"my-video\" ref={this.localVideoref} autoPlay muted style={{\r\n\t\t\t\t\t\t\t\tborderStyle: \"solid\",borderColor: \"#bdbdbd\",objectFit: \"fill\",width: \"60%\",height: \"30%\"}}></video>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"btn-down\" style={{ backgroundColor: \"whitesmoke\", color: \"whitesmoke\", textAlign: \"center\" }}>\r\n\t\t\t\t\t\t\t<IconButton style={{ color: \"#424242\" }} onClick={this.handleVideo}>\r\n\t\t\t\t\t\t\t\t{(this.state.video === true) ? <VideocamIcon /> : <VideocamOffIcon />}\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t\t<IconButton style={{ color: \"#f44336\" }} onClick={this.handleEndCall}>\r\n\t\t\t\t\t\t\t\t<CallEndIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t\t<IconButton style={{ color: \"#424242\" }} onClick={this.handleAudio}>\r\n\t\t\t\t\t\t\t\t{this.state.audio === true ? <MicIcon /> : <MicOffIcon />}\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t\t{this.state.screenAvailable === true ?\r\n\t\t\t\t\t\t\t\t<IconButton style={{ color: \"#424242\" }} onClick={this.handleScreen}>\r\n\t\t\t\t\t\t\t\t\t{this.state.screen === true ? <ScreenShareIcon /> : <StopScreenShareIcon />}\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t: null}\r\n\r\n\t\t\t\t\t\t\t<Badge badgeContent={this.state.newmessages} max={999} color=\"secondary\" onClick={this.openChat}>\r\n\t\t\t\t\t\t\t\t<IconButton style={{ color: \"#424242\" }} onClick={this.openChat}>\r\n\t\t\t\t\t\t\t\t\t<ChatIcon />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<Modal show={this.state.showModal} onHide={this.closeChat} style={{ zIndex: \"999999\" }}>\r\n\t\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t\t<Modal.Title>Chat Room</Modal.Title>\r\n\t\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t\t<Modal.Body style={{ overflow: \"auto\", overflowY: \"auto\", height: \"400px\", textAlign: \"left\" }} >\r\n\t\t\t\t\t\t\t\t{this.state.messages.length > 0 ? this.state.messages.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t<div key={index} style={{textAlign: \"left\"}}>\r\n\t\t\t\t\t\t\t\t\t\t<p style={{ wordBreak: \"break-all\" }}><b>{item.sender}</b>: {item.data}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)) : <p>No message yet</p>}\r\n\t\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t\t<Modal.Footer className=\"div-send-msg\">\r\n\t\t\t\t\t\t\t\t<Input placeholder=\"Message\" value={this.state.message} onChange={e => this.handleMessage(e)} />\r\n\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={this.sendMessage}>Send</Button>\r\n\t\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<div className=\"video-container\">\r\n\t\t\t\t\t\t\t<div style={{ paddingTop: \"20px\" }}>\r\n\t\t\t\t\t\t\t\t<Input value={window.location.href} disable=\"true\"></Input>\r\n\t\t\t\t\t\t\t\t<Button style={{backgroundColor: \"#3f51b5\",color: \"whitesmoke\",marginLeft: \"20px\",\r\n\t\t\t\t\t\t\t\t\tmarginTop: \"10px\",width: \"120px\",fontSize: \"10px\"\r\n\t\t\t\t\t\t\t\t}} onClick={this.copyUrl}>Copy invite link</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Row id=\"main\" className=\"flex-container\" style={{ margin: 0, padding: 0 }}>\r\n\t\t\t\t\t\t\t\t<video id=\"my-video\" ref={this.localVideoref} autoPlay muted style={{\r\n\t\t\t\t\t\t\t\t\tborderStyle: \"solid\",borderColor: \"#bdbdbd\",margin: \"10px\",objectFit: \"fill\",\r\n\t\t\t\t\t\t\t\t\twidth: \"100%\",height: \"100%\"}}></video>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Video","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\routing\\CombinedRoute.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\Patients\\Patients.js",["278","279","280","281","282"],"import React,{useState,useEffect} from 'react';\nimport './Patients.css'\nimport spinner from '../../../images/icon/spinner_1.gif'\nimport { getDoctorPatients } from '../../../actions/doctorActions';\nimport { connect } from 'react-redux';\n\n\n\nimport Table from '../Dashboard/Table';\nimport { getEmailIcon } from '../../../assets/icons/Icon';\nimport { clickedImage } from '../../../actions/doctorActions';\nimport Sidebar from '../Sidebar/Sidebar';\nimport AppNavbar from '../../AppNavbar';\nimport appointment from '../../../reducers/appointmentReducer';\n\n\n\nconst Patients = ({patients,columns,user,getDoctorPatients}) => {\n    // const [patients, setPatients] = useState([]);\n  \n    const {id} = user;\n    useEffect(() => {\n        getDoctorPatients(id);\n    }, [])\n    const getEmailLogo = ({ email }) => {\n        return getEmailIcon({ email });\n    };\n    const tableCallbacks = {  email: getEmailLogo }\n    return (\n        <div className=\"container-fluid bg-light\">\n        <AppNavbar/>\n        <div className=\"row\">\n        <Sidebar/>\n        <div className=\"col-md-10 p-4\">\n        <h2>Patients</h2>\n        <div style={{backgroundColor:\"#fff\"}} className=\"my-5 p-3\">\n            <div className=\"d-flex flex-items justify-content-between my-5\">\n            <h4>All Patients</h4>\n            </div>\n\n            <Table \n                    // appointments={ appointments.filter(appointment=> dateComapre(appointment.date)) }\n                    rows = {patients}\n                    columns={ columns }\n                    tableCallbacks={tableCallbacks}\n                    \n                    />\n           \n        </div>\n    </div>\n    </div>\n    </div>\n    );\n};\nconst mapStateToProps = state => ({\n    patients: state.doctor.patients,\n    user: state.auth.user,\n    columns: state.table.patientsTable.columns,\n    imageModal: state.imageModal,\n  });\n  \n\nexport default  connect(mapStateToProps, { getDoctorPatients })(Patients);","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\Dashboard\\Dashboard.js",["283","284","285","286","287"],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\DoctorAppointment\\DoctorAppointment.js",["288","289","290","291"],"import React, { useEffect, useState } from 'react';\nimport spinner from '../../../images/icon/spinner_1.gif'\nimport './DoctorAppointment.css'\nimport Sidebar from '../Sidebar/Sidebar';\nimport AppointmentCalendar from './AppointmentCalender';\nimport AppNavbar from '../../AppNavbar';\nimport { connect } from 'react-redux';\nimport Table from '../Dashboard/Table';\n\nconst DoctorAppointment = (props) => {\n // const {appointments} = props || {};\n// typeof array[index] == 'undefined'\n  console.log( typeof props.appointments[0])\n    return (\n        <div className=\"container-fluid bg-light\">\n                <AppNavbar/>\n                  <div className='row'>\n                    <Sidebar/>\n                    {/* <AppointmentCalendar /> */}\n                    { typeof props.appointments[0] && \n                         <Table \n                            rows={ props.appointments }\n                            columns={ props.columns }\n                            />             \n                    }\n                     </div> \n            </div>\n\n    );\n};\n\n\nconst mapStateToProps = state => ({\n    appointments: state.appointment.appointments,\n    user: state.auth.user,\n    columns: state.table.appointmentsTable.columns,\n  });\n  \n  export default connect(mapStateToProps)(DoctorAppointment);\n\n\n\n\n    // const today = new Date();\n    // today.setMinutes(today.getMinutes()-today.getTimezoneOffset());\n    // const date = JSON.stringify(today).slice(1,11);\n    // const [appointments, setAppointments] = useState([]);\n    // useEffect(() => {\n    //     fetch('https://doctors-portal-srv.herokuapp.com/appointments')\n    //         .then(res => res.json())\n    //         .then(data => setAppointments(data))\n    // }, [])\n    // const [filterAppointments,setFilterAppointments] =useState([]);\n    // useEffect(()=>{\n    //     var filterArray = []\n    //     appointments.filter(appointment=>{\n    //         if(appointment.date === (props.date?props.date:date) ){\n    //             filterArray.push(appointment)\n    //         }\n    //     })\n    //     setFilterAppointments(filterArray)\n    // },[date,props,appointments])\n    // const visitHandler = (e,id) => {\n    //     fetch('https://doctors-portal-srv.herokuapp.com/updateVisited', {\n    //         method: 'POST',\n    //         headers: {\n    //           'Content-Type': 'application/json'\n    //         },\n    //         body: JSON.stringify({\n    //             [e.target.name]:e.target.value,\n    //             id\n    //         })\n    //       })\n    //       .then(res => res.json())\n    //       .then(data => {\n    //         alert(\"update success\")\n    //       })  \n\n    // }\n\n\n\n\n\n\n\n\n","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\PatientPanel.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorPanel.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\AppNavbar.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\actions\\errorActions.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\actions\\alertActions.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\BookingItem.js",["292","293","294","295"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport like from '../assets/images/like.png';\nimport share from '../assets/images/share.png';\nimport { connect } from 'react-redux'\nimport {getSingleDoctor} from '../actions/patientActions'\nimport AppointmentModal from './DoctorComponent/Dashboard/AppointmentModal';\nimport { Button } from 'reactstrap';\n\nconst BookingItem = ({appointment}) => {\n\nconst {\n  doctor,\n  patient,\n  date,\n  reason,\n  time,\n  status,\n  prescription\n} = appointment;\n\nconst {\n  _id,\nname,\ncategory,\ndescription,\nfee,\nexp,\nlikes,\nimage,\n} = (doctor||{});\n\n\nconst join = () => {\n  var url = appointment._id;\n  window.location.href = `/meeting/${url}`;\n}\n\n\n\n  return (\n  // <div>{`${doctor.}`}</div>\n  <div className=\"BookingItem\">\n    {doctor && (   \n    <div className=\"d-flex\">\n      <div className=\"BookingItem-img\">\n        {/* <img src={doctor.image} alt=\"Avatar\" /> */}\n      </div>\n      <div className=\"BookingItem-info d-flex justify-content-between w-100\">\n        <div>\n              <h4 className=\"BookingItem-title\">{`Dr. ${name}`}</h4>\n          <p className=\"BookingItem-category\">{category}</p>\n          <p className=\"BookingItem-description\">{description}</p>\n          <div className=\"BookingItem-exp d-flex\">\n            <p>{`${fee}`}</p>\n            <p>{`${exp} yrs of experience`}</p>\n            <p>\n              <img src={like} alt=\"likes\" />\n              <span>{likes}</span>\n            </p>\n          </div>\n          <div className=\"book-info\">\n            <h6>Booking Information:</h6>\n            <p>\n              Date -\n              <span>{date}</span>\n            </p>\n            <p className=\"book-time\">\n              Time -\n              <span>{time}</span>\n            </p>\n            <p>\n              Patient name -\n              <span>{patient.name}</span>\n            </p>\n            <p className=\"book-time\">\n              Reason to visit -\n              <span>{reason}</span>\n            </p>\n            <Link  to={{\n              pathname: `/doctors/${doctor._id}`,\n              state: { doctor }\n            }}\n            className=\"d-flex justify-content-center\">VIEW PROFILE</Link>\n\n           <AppointmentModal appointment={appointment}/>\n           <Button variant=\"contained\" color=\"primary\" onClick={join} \n            style={{ margin: \"20px\" }}>Open Meeting</Button>\n          </div>\n        </div>\n        <div>\n          <img src={share} alt=\"share icon\" />\n        </div>\n      </div>\n    </div>\n    )}\n  </div>\n\n  )\n  }\n// } \n  \n\n\nBookingItem.propTypes = {\n  patient: PropTypes.string.isRequired,\n  reason: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n  singleDoctor: PropTypes.object,\n  getSingleDoctor:PropTypes.func\n};\n\n\n\n\n\n\nexport default connect(null,{getSingleDoctor})(BookingItem)","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\actions\\patientActions.js",["296","297","298","299"],"import axios from 'axios';\r\n\r\nimport {\r\nADD_DOCTOR,\r\nGET_DOCTORS,\r\nGET_SINGLE_DOCTOR,\r\nDOCTOR_FILTER\r\n} from './types';\r\nimport { setAlert } from './alertActions';\r\nimport { returnErrors } from './errorActions';\r\nimport { tokenConfig } from './authActions';\r\n\r\n\r\nexport const getDoctors = (filterObj) => async(dispatch , getState) => {\r\n\r\n  const approvedUsers = await axios.get('/api/auth/getApprovedDoctors', tokenConfig(getState));\r\n  const doctors = await axios.get('/api/doctors',tokenConfig(getState));\r\n  \r\n    const approvedArr = [];\r\n\r\n    let categoryApprovedArr = [];\r\n    let searchArr=[]\r\n    const dispatchArr = (arr) => {\r\n      dispatch({\r\n        type: GET_DOCTORS,\r\n        payload: arr\r\n        });\r\n      }\r\n    doctors.data.map(doctor => \r\n    approvedUsers.data.map(user => {\r\n    if(user._id === doctor._id)\r\n      approvedArr.push(doctor);\r\n    \r\n  })\r\n  )\r\n\r\n      if(filterObj.name&&filterObj.category){\r\n        categoryApprovedArr = approvedArr.filter(doctor => {\r\n          return doctor.category !== filterObj.category\r\n                 })\r\n                 searchArr = categoryApprovedArr.filter(doctor => {\r\n                  return doctor.name.toLowerCase().includes(filterObj.name.toLowerCase())\r\n                })   \r\n                dispatchArr(searchArr) \r\n      }\r\n      \r\n        if(filterObj.category){\r\n          console.log(filterObj.category)\r\n          if(filterObj.category==='All')\r\n            dispatchArr(approvedArr)\r\n        else{\r\n      categoryApprovedArr=approvedArr.filter(doctor=>{\r\n        return doctor.category === filterObj.category\r\n               })\r\n               dispatchArr(categoryApprovedArr)\r\n        }\r\n      }\r\n       \r\n\r\n        if(filterObj.name){\r\n          searchArr=approvedArr.filter(doctor=>{\r\n\r\n            return doctor.name.toLowerCase().includes(filterObj.name.toLowerCase())\r\n          })   \r\n          searchArr.sort(function(a,b) {\r\n            return a.name.indexOf(filterObj.name) - b.name.indexOf(filterObj.name);\r\n        });    \r\n          dispatchArr(searchArr)      \r\n        }\r\n       \r\n      \r\n  };\r\n\r\n\r\n\r\n\r\n\r\nexport const getSingleDoctor = (id) => async (dispatch , getState) => {\r\n    const doctor=await axios.get(`/api/doctors/${id}`,tokenConfig(getState))\r\n    .then(res => {\r\n    dispatch({\r\n    type: GET_SINGLE_DOCTOR,\r\n    payload: res.data\r\n    });\r\n    return res.data\r\n    })\r\n    .catch(error => dispatch(setAlert(`${error}`, 'danger')));\r\n};\r\n\r\nexport const setFilter = (obj) => ({\r\ntype: DOCTOR_FILTER,\r\npayload: obj,\r\n});","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\actions\\types.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\FilterPop.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\actions\\appointmentActions.js",["300"],"import axios from 'axios';\nimport {\n\tAPPOINTMENT_ERROR,\n\tUPDATE_APPOINTMENT_STATUS,\n\tGET_STATUS_COUNT,\n\tCREATE_PRESCRIPTION,\n\tUPDATE_MEDICINE, \n\tCREATE_APPOINTMENT, \n\tGET_APPOINTMENTS, \n\tDELETE_APPOINTMENT,\n\tUPDATE_APPOINTMENT_PRESCRIPTION,\n\tUPDATE_APPOINTMENT,\n\tGET_APPOINTMENTS_BY_DATE\n} from './types';\nimport { setAlert } from './alertActions';\nimport { tokenConfig } from './authActions';\nimport { da } from 'date-fns/locale';\n\n\nexport const updateAppointment = (appointmentObj) => (dispatch, getState) => {\n\tconst { _id } = appointmentObj;\n\tconsole.log(appointmentObj)\n\taxios.post(`api/appointments/updateAppointment/${_id}`, appointmentObj, tokenConfig(getState))\n\t.then(res =>{ \n\t\tconsole.log(res.data)  \n\tdispatch({\n\t\ttype: UPDATE_APPOINTMENT,\n\t\tpayload: res.data\n\t})}).catch(err => dispatch(setAlert(`${err}`, 'danger')));\n};\n\n\n\nexport const getPatientAppointments = (id) => (dispatch, getState) => {\n\t console.log(id)\n  axios.get(`api/appointments/getPatientAppointments/${id}`, tokenConfig(getState))\n  .then(res =>{ \n\t console.log(res.data)  \n\tdispatch({\n      type: GET_APPOINTMENTS,\n      payload: res.data\n  })}).catch(err => dispatch(setAlert(`${err}`, 'danger')));\n\n};\n\n\nexport const getDoctorAppointments = (id) => (dispatch, getState) => {\n\t \n  axios.get(`api/appointments/getDoctorAppointments/${id}`, tokenConfig(getState))\n  .then(res =>{ \n\t// console.log(res.data)  \n\tdispatch({\n      type: GET_APPOINTMENTS,\n      payload: res.data\n  })}).catch(err => dispatch(setAlert(`${err}`, 'danger')));\n\n};\n\nexport const createAppointment = appointmentObj => (dispatch , getState) => {\n  console.log(appointmentObj);\n  axios.post('api/appointments/createAppointment', appointmentObj, tokenConfig(getState))\n  .then(res => \n    {\n      dispatch({\n      type: CREATE_APPOINTMENT,\n      payload: res.data\n  })\n  dispatch(setAlert('Appointment created Successfully', 'success'));\n})\n  .catch(err =>  dispatch(setAlert(`${err}`, 'danger')));\n};\n\n\nexport const deleteAppointment = id => (dispatch, getState) => {\n  console.log(id);\n  axios.delete(`api/appointments/delete/${id}`, tokenConfig(getState))\n  .then(res => dispatch({\n      type: DELETE_APPOINTMENT,\n      payload: id\n  }))\n  .catch(err =>  dispatch(setAlert(`${err}`, 'danger')));\n};\n\nexport const updateAppointmentPrescription = appointmentObj => (dispatch , getState) => {\n  console.log(appointmentObj);\n  axios.post('api/appointments/updateAppointmentPrescription', appointmentObj, tokenConfig(getState))\n  .then(res => \n    {\n      dispatch({\n      type: UPDATE_APPOINTMENT_PRESCRIPTION,\n      payload: res.data\n  })\n  dispatch(setAlert('Appointment created Successfully', 'success'));\n})\n  .catch(err =>  dispatch(setAlert(`${err}`, 'danger')));\n};\n\n\n//////////////////////////////////////////////\n//GET ALL APPOINTMENTS BY DATE\nexport const getAppointmentsByDate = (date = new Date()) => async (dispatch,getState) => {\n\t\n\tfunction convert(date) {\n\t\tvar dateString = new Date(date.year, date.month-1, date.day);\n\t\tlet month = dateString.toLocaleString('en-us', { month: 'short' });\n\t\n\t\t// console.log(month)\n\t\treturn [month,date.day+\",\",date.year].join(\" \");\n\t}\n\ttry {\n\t\tconst res = await axios.get(`api/appointments/${convert(date)}`, tokenConfig(getState));\n\t\tdispatch({\n\t\t\ttype: GET_APPOINTMENTS_BY_DATE,\n\t\t\tpayload: res.data\n\t\t});\n\t\tconsole.log(res)\n\t} catch (error) {  \n\t\tif (error.response) {\n\t\t\tdispatch({\n\t\t\t\ttype: APPOINTMENT_ERROR,\n\t\t\t\tpayload: {\n\t\t\t\t\tmsg: error.response.data,\n\t\t\t\t\tstatus: error.response.data.status,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n};\n// UPDATE APPOINTMENT STATUS\nexport const updateAppointmentStatus = (appointment, textData) => async (\n\tdispatch\n) => {\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\ttry {\n\t\tawait axios.post(\n\t\t\t`/api/appointments/action/${appointment._id}`,\n\t\t\t{ status: textData },\n\t\t\tconfig\n\t\t);\n\t\tdispatch({\n\t\t\ttype: UPDATE_APPOINTMENT_STATUS,\n\t\t\tpayload: {\n\t\t\t\tdata: appointment,\n\t\t\t\tvalue: textData,\n\t\t\t},\n\t\t});\n\t\tdispatch(\n\t\t\tsetAlert(`Appointment Status Updated into ${textData}`, \"success\")\n\t\t);\n\t} catch (error) {\n\t\tif (error.response) {\n\t\t\tdispatch({\n\t\t\t\ttype: APPOINTMENT_ERROR,\n\t\t\t\tpayload: {\n\t\t\t\t\tmsg: error.response.data,\n\t\t\t\t\tstatus: error.response.data.status,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n};\n\n// GET ALL GET STATUS COUNT\nexport const getStatusCount = (date) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.get(`api/appointments/statuscount`);\n\t\tdispatch({\n\t\t\ttype: GET_STATUS_COUNT,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (error) {\n\t\tif (error.response) {\n\t\t\tdispatch({\n\t\t\t\ttype: APPOINTMENT_ERROR,\n\t\t\t\tpayload: {\n\t\t\t\t\tmsg: error.response.data,\n\t\t\t\t\tstatus: error.response.data.status,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n};\n\n// PUT VISITED APPOINTMENT\nexport const updateVisitedAppointment = (data) => async (dispatch) => {\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\ttry {\n\t\tawait axios.post(`/api/appointments/visitstatus/${data._id}`, config);\n\t\tdispatch(setAlert(\"Appointment Updated Successfully\", \"success\"));\n\t} catch (error) {\n\t\tif (error.response) {\n\t\t\tdispatch({\n\t\t\t\ttype: APPOINTMENT_ERROR,\n\t\t\t\tpayload: {\n\t\t\t\t\tmsg: error.response.data,\n\t\t\t\t\tstatus: error.response.data.status,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n};\n\nexport const makePrescription = (appointmentID) => async (dispatch) => {\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\ttry {\n\t\tconst res = await axios.post(`/api/prescription/${appointmentID}`, config);\n\t\tdispatch({\n\t\t\ttype: CREATE_PRESCRIPTION,\n\t\t\tpayload: res.data,\n\t\t});\n\t\tdispatch(setAlert(`Prescription Created Successfully`, \"success\"));\n\t} catch (error) {\n\t\tif (error.response) {\n\t\t\tdispatch({\n\t\t\t\ttype: APPOINTMENT_ERROR,\n\t\t\t\tpayload: {\n\t\t\t\t\tmsg: error.response.data,\n\t\t\t\t\tstatus: error.response.data.status,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n};\nexport const updateMedicine = (appointmentID, formData) => async (dispatch) => {\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t};\n\n\ttry {\n\t\tconst res = await axios.put(\n\t\t\t`/api/prescription/medicean/${appointmentID}`,\n\t\t\tformData,\n\t\t\tconfig\n\t\t);\n\t\tdispatch({\n\t\t\ttype: UPDATE_MEDICINE,\n\t\t\tpayload: res.data,\n\t\t});\n\t\tdispatch(setAlert(`Medicean Added`, \"success\"));\n\t} catch (error) {\n\t\tif (error.response) {\n\t\t\tdispatch({\n\t\t\t\ttype: APPOINTMENT_ERROR,\n\t\t\t\tpayload: {\n\t\t\t\t\tmsg: error.response.data,\n\t\t\t\t\tstatus: error.response.data.status,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n};\n","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\ClinicInfo.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\Doctor.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorInfo.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorFeedback.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\reducers\\appointmentReducer.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\FilesComponents\\FileUpload.js",["301","302","303"],"import React, { Fragment, useState } from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport axios from 'axios';\nimport { uploadFiles } from '../../actions/uploadActions';\nimport fileUpload from 'express-fileupload';\nimport { connect } from 'react-redux';\nimport { update } from '../../actions/authActions';\n\n\nconst FileUpload = ({uploadFiles, user, update}) => {\n  const [file, setFile] = useState('');\n  const [filename, setFilename] = useState('Choose File');\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState('');\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const [userState,setUserState]=useState({...user})\n\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onUploadProgress = progressEvent => {\n    setUploadPercentage(\n              parseInt(\n                Math.round((progressEvent.loaded * 100) / progressEvent.total))\n            );\n            \n          // Clear percentage\n          setTimeout(() => setUploadPercentage(0), 10000);\n  }\n\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    // const formData = new FormData();\n    // formData.append('file', file);\n    const res = await uploadFiles(onUploadProgress,file);\n    const { fileName, filePath } = res.data;\n\n    setUploadedFile({ fileName, filePath });\n    setMessage('File Uploaded');\n    const {Location} = res.data\n \n   // setUserState();\n   // console.log(userState)\n    update({...userState, image: Location});\n\n    // try {\n    //   const res = await axios.post('/api/uploads', formData, {\n    //     onUploadProgress: progressEvent => {\n    //       setUploadPercentage(\n    //         parseInt(\n    //           Math.round((progressEvent.loaded * 100) / progressEvent.total)\n    //         )\n    //       );\n\n    //       // Clear percentage\n    //       setTimeout(() => setUploadPercentage(0), 10000);\n    //     }\n    //   });\n\n    // } catch (err) {\n    //   if (err.response.status === 500) {\n    //     setMessage('There was a problem with the server');\n    //   } else {\n    //     setMessage(err.response.data.msg);\n    //   }\n    // }\n  };\n\n  return (\n    <Fragment>\n      {message ? <Message msg={message} /> : null}\n      <form onSubmit={onSubmit}>\n        <div className='custom-file mb-4'>\n          <input\n            type='file'\n            className='custom-file-input'\n            id='customFile'\n            onChange={onChange}\n          />\n          <label className='custom-file-label' htmlFor='customFile'>\n            {filename}\n          </label>\n        </div>\n\n        <Progress percentage={uploadPercentage} />\n\n        <input\n          type='submit'\n          value='Upload'\n          className='btn btn-primary btn-block mt-4'\n        />\n      </form>\n      {uploadedFile ? (\n        <div className='row mt-5'>\n          <div className='col-md-6 m-auto'>\n            <h3 className='text-center'>{uploadedFile.fileName}</h3>\n            <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\n          </div>\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user\n});\n\n\nexport default connect(mapStateToProps, {uploadFiles, update})(FileUpload);","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\Dashboard\\Table.js",["304","305","306","307","308"],"import React, { useState, useEffect } from 'react';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport PopUpAlert from './PopUpAlert';\r\nimport ImageModal from './ImageModal';\r\nimport { Row, Col } from 'reactstrap';\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {KeyboardDatePicker,MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport { getAppointmentsByDate, getDoctorAppointments } from '../../../actions/appointmentActions';\r\nimport { connect } from 'react-redux';\r\nimport appointment from '../../../reducers/appointmentReducer';\r\n\r\n\r\nexport const Table = ({ rows, columns, imageModal, toggleModal, tableCallbacks, getAppointmentsByDate,user }) => {\r\n    var currentLocation = window.location.href;\r\n    const {id} = user;\r\n    var date = new Date();\r\n    var year = date.getFullYear();\r\n    var month = date.getMonth();\r\n    var day = String(date.getDate());\r\n\r\n    const defaultValue = {\r\n      year: year,\r\n      month: month+1,\r\n      day: parseInt(day)\r\n    };\r\n\r\n    var selectedDay = defaultValue;\r\n   \r\n    const pickDateHandler = (date) => {\r\n      selectedDay = {\r\n        year: date.getFullYear(),\r\n        month: date.getMonth()+1,\r\n        day: String(date.getDate())\r\n      };  \r\n      getAppointmentsByDate(selectedDay);\r\n      console.log(selectedDay)   \r\n    };\r\n\r\n  //   useEffect(() => {\r\n  //     getAppointmentsByDate(selectedDay);\r\n  //     console.log(selectedDay)\r\n  //  }, [selectedDay])\r\n  \r\n    return (\r\n      <Row>\r\n        <Col sm={{ size: 10, offset: 1 }}>\r\n          { rows.length > 0 && <PopUpAlert totalResults={ rows.length } />}\r\n          { currentLocation === \"http://localhost:3000/doctorDashboard\" &&\r\n          <div className=\"table-heading\">\r\n            <h1>Upcoming Appointments</h1>  \r\n           <div className=\"st-date-picker\">\r\n             \r\n           <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n             <KeyboardDatePicker\r\n               placeholder=\"2018/10/10\"\r\n               value={selectedDay}\r\n               onChange={(date) => pickDateHandler(date)}\r\n               disablePast={true}\r\n             />\r\n           </MuiPickersUtilsProvider>\r\n         </div>\r\n          </div>\r\n          }  \r\n\r\n{ currentLocation === \"http://localhost:3000/doctorAppointments\" && \r\n           <h1>Your Appointments Today</h1> \r\n          }\r\n          <ReactCollapsingTable columns={ columns }\r\n                                rows={ rows }\r\n                                rowSize={ 5 }\r\n                                column='email'\r\n                                callbacks={ tableCallbacks }\r\n                                showSearch={ true }\r\n                                showPagination={ true } />\r\n          { imageModal && \r\n          <ImageModal isOpen={ imageModal.isOpen }\r\n                      toggle={ toggleModal }\r\n                      imageURL={ imageModal.imageURL } />\r\n          }\r\n          \r\n\r\n        </Col>\r\n      </Row>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  appointments: state.appointment.appointments,\r\n  user: state.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAppointmentsByDate })(Table);\r\n","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\DoctorAppointment\\AppointmentCalender.js",["309"],"import React from 'react';\nimport 'primereact/resources/primereact.min.css';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primeicons/primeicons.css';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport './AppointmentCalendar.css';\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\nimport { Calendar } from \"react-modern-calendar-datepicker\";\nimport { getAppointmentsByDate } from '../../../actions/appointmentActions';\nimport { connect } from 'react-redux';\n\nconst AppointmentCalendar = (props)=> {\n    var date = new Date();\n    var year = date.getFullYear();\n    var month = date.getMonth();\n    var day = String(date.getDate());\n     \n\n    const defaultValue = {\n      year: year,\n      month: month+1,\n      day: day\n    };\n\n    \n    const [selectedDay, setSelectedDay] = useState(defaultValue);\n\n   \n    useEffect(() => {\n      props.getAppointmentsByDate(selectedDay);\n      console.log(selectedDay)\n   }, [selectedDay])\n  \n\n    return (\n      <Calendar\n        value={selectedDay}\n        onChange={setSelectedDay}\n        shouldHighlightWeekends\n      />\n    );\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user\n});\n\n\nexport default connect(mapStateToProps, { getAppointmentsByDate })(AppointmentCalendar);\n","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\actions\\doctorActions.js",["310","311","312","313","314"],"// import axios from 'axios';\r\n// import {\r\n// ADD_DOCTOR,\r\n// GET_DOCTORS,\r\n// GET_SINGLE_DOCTOR,\r\n// DOCTOR_FILTER,\r\n// GET_APPOINTMENTS,\r\n// IMAGE_CLICKED\r\n// } from './types';\r\n// import { setAlert } from './alertActions';\r\n// import { returnErrors } from './errorActions';\r\n// import { tokenConfig } from './authActions';\r\n\r\n\r\n\r\n// export const submitInfo = ({...doctorData}) => (dispatch , getState) => {\r\n//     axios.post('/api/doctors', doctorData, tokenConfig(getState))\r\n//     .then(res => {\r\n//     dispatch({\r\n//     type: ADD_DOCTOR,\r\n//     payload: res.data\r\n//     });\r\n\r\n//     }\r\n//     )\r\n//     .catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\r\n// };\r\n\r\n\r\n// export const clickedImage = ({ imageURL }) => dispatch => {\r\n//     console.log(imageURL);\r\n//     dispatch({\r\n//         type: IMAGE_CLICKED,\r\n//         payload: imageURL\r\n//         });\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport axios from 'axios';\r\nimport {\r\nADD_DOCTOR,\r\nGET_DOCTORS,\r\nGET_SINGLE_DOCTOR,\r\nDOCTOR_FILTER,\r\nGET_APPOINTMENTS,\r\nIMAGE_CLICKED,\r\nGET_PATIENTS\r\n} from './types';\r\nimport { setAlert } from './alertActions';\r\nimport { returnErrors } from './errorActions';\r\nimport { tokenConfig } from './authActions';\r\n\r\n\r\nexport const getDoctorPatients = (id) => async(dispatch , getState) => {\r\n    console.log(id)\r\n\r\n   const patients = await axios.get(`api/appointments/getDoctorPatients/${id}`,tokenConfig(getState));\r\n   console.log(patients)\r\n       dispatch({\r\n         type: GET_PATIENTS,\r\n         payload: patients.data\r\n         });\r\n   }\r\n\r\n\r\n\r\n\r\nexport const submitInfo = ({...doctorData}) => (dispatch , getState) => {\r\n    axios.post('/api/doctors', doctorData, tokenConfig(getState))\r\n    .then(res => {\r\n    dispatch({\r\n    type: ADD_DOCTOR,\r\n    payload: res.data\r\n    });\r\n\r\n    }\r\n    )\r\n    .catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\r\n};\r\n\r\n\r\nexport const clickedImage = ({ imageURL }) => dispatch => {\r\n    console.log(imageURL);\r\n    dispatch({\r\n        type: IMAGE_CLICKED,\r\n        payload: imageURL\r\n        });\r\n};\r\n","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\Sidebar\\Sidebar.js",["315"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Sidebar.css'\nimport { getDoctorAppointments } from '../../../actions/appointmentActions';\nimport { connect } from 'react-redux';\n\nconst Sidebar = (props) => {\n    const {id} = props.user;\n\n    return (\n        <div className=\"col-md-2 primary-bg p-5\">\n            <li className=\"navbar-nav\" >\n                <Link className=\"nav-link text-light\" to=\"/\">\n                    <span className=\"fa fa-share mb-5 pr-3\"></span>\n            Go to Site\n        </Link>\n            </li>\n            <li className=\"navbar-nav\">\n                <Link className=\"nav-link text-light\"  to={{\n                pathname: `/doctorDashboard`,\n                state: { flag: true }\n              }}>\n                    <span className=\"fa fa-bars pr-3\"></span>\n            Dashboard\n        </Link>\n            </li>\n            <li className=\"navbar-nav\">\n                <Link className=\"nav-link text-light\" to=\"/doctorAppointments\">\n                    <span className=\"fa fa-calendar-minus-o pr-3\"></span>\n            Appointments\n        </Link>\n            </li>\n            <li className=\"navbar-nav\">\n                <Link className=\"nav-link text-light\" to=\"/doctorPatients\">\n                    <span className=\"fa fa-user-o pr-3\"></span>\n           Patients\n        </Link>\n            </li>\n            <li className=\"navbar-nav\">\n                <Link className=\"nav-link text-light\" to=\"/doctor/prescription\">\n                    <span className=\"fa fa-file-text-o pr-3\"></span>\n          Prescription\n        </Link>\n            </li>\n            <li className=\"navbar-nav\">\n                <Link className=\"nav-link text-light\">\n                    <span className=\"fa fa-cog pr-3\"></span>\n            Settings\n        </Link>\n            </li>\n            <li className=\"navbar-nav mt-5 pt-5\">\n                <Link className=\"nav-link text-light\" to=\"/\">\n                    <span className=\"fa fa-arrow-right pr-3\"></span>\n            Log Out\n        </Link>\n            </li>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    appointments: state.appointment.appointments,\n    user: state.auth.user,\n  });\n\nexport default connect(mapStateToProps, { getDoctorAppointments })(Sidebar);\n","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\assets\\icons\\Icon.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\reducers\\index.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\pages\\DoctorFirstSubmit.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\Dashboard\\AppointmentModal.js",["316"],"import React, { useState, useEffect} from 'react';\nimport './AppointmentModal.css'\nimport { useForm } from 'react-hook-form';\nimport TimePicker from 'rc-time-picker';\nimport moment from 'moment';\nimport { deleteAppointment, getPatientAppointments, updateAppointment,getDoctorAppointments} from '../../../actions/appointmentActions';\nimport { connect } from 'react-redux';\nimport {\n  // Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from 'reactstrap';\nimport { clearErrors } from '../../../actions/errorActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { confirmAlert } from 'react-confirm-alert'; \nimport 'react-confirm-alert/src/react-confirm-alert.css'; \nimport './style.css'\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst AppointmentModal = (props) => {\n  const classes = useStyles();\n  const { errors, register } = useForm();\n // const [appointment, setAppointment] = useState({...props.appointment});\n  const [modal, setModal] = useState(false);\n\n  var appointment = {...props.appointment};\n  const {id} = props.user;\n  const {userType} = props.user;\n // console.log(appointment);\n  const onSubmit = (data, e) => {\n    // setAppointment({ ...appointment })\n    console.log(appointment);\n     props.updateAppointment(appointment);\n     //if(userType===\"doctor\")\n       // props.getDoctorAppointments(id);\n      if(userType===\"patient\")\n        props.getPatientAppointments(id)\n     toggle();\n  \n  };\n\n\n  const onChange = (e) => {\n    appointment = {\n      ...appointment,\n      date: moment(e.target.value).format('ll')\n    }\n   // setAppointment({...appointment, date: moment(e.target.value).format('MMM Do, YYYY') }) \n\n    console.log(appointment)\n  };\n\n  const onHandleTimeChange = (time) => {\n    appointment = {\n      ...appointment,\n      time: time.format('HH:mm')\n    }\n   // setAppointment({...appointment,time: time.format('HH:mm')}) \n    console.log(appointment)\n\n  };\n  const toggle = () => {\n    //Clear Errors\n    props.clearErrors();\n    setModal(!modal);\n};\n\nconst statusHandler = async (e) => {\n  e.persist();\n  appointment = {\n      ...appointment,\n      [e.target.name]: e.target.value\n  }\n  await props.updateAppointment({...appointment,[e.target.name]: e.target.value});\n  alert(`Appointment ${e.target.value}`);\n}\n\nconst handleClickDelete = () => {\n  console.log(appointment._id);\n  props.deleteAppointment(appointment._id);\n}\n\nconst submit = () => {\n  confirmAlert({\n    customUI: ({ onClose }) => {\n      return (\n        <div className='custom-ui'>\n          <h1>Are you sure?</h1>\n          <p>You want to delete this file?</p>\n          <button onClick={onClose}>No</button>\n          <button\n            onClick={() => {\n              handleClickDelete();\n              onClose();\n            }}\n          >\n            Yes, Delete it!\n          </button>\n        </div>\n      );\n    }\n  });\n};\n\n\n\n\n  return (\n        <div>\n              {\n                (userType===\"doctor\"&&appointment.status) &&\n                 <select onChange={(e)=>statusHandler(e,appointment._id)} className=\"form-control-sm text-light select\" name=\"status\">\n                 <option selected disabled hidden>{appointment.status}</option>\n                 <option value=\"approved\">Approved</option>\n                 <option value=\"cancelled\">Cancelled</option>\n                 </select>\n                }\n                <button data-toggle=\"modal\" onClick={toggle} className=\"btn btn-warning text-light\"> \n                <span className=\"fa fa-pencil btn btn-warning text-light\"/> \n                </button> \n              \n                <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                onClick={submit}\n                startIcon={<DeleteIcon />}\n              >\n                Delete\n           </Button>\n\n           {/* <div className='container'>\n        <button onClick={submit}>Confirm dialog</button>\n      </div> */}\n                <Modal\n                isOpen={modal}\n                toggle={toggle}>\n                    <ModalHeader \n                    toggle={toggle}>\n                    Update Appointment\n                    </ModalHeader>\n                        <ModalBody>\n                          <Form>\n                              <FormGroup >\n                                <Label for='date'> \n                                      Date\n                                  </Label>\n                                  <Input\n                                 defaultValue={appointment.date} type=\"date\" \n                                 min={new Date().toISOString().split('T')[0]}\n                                 className=\"form-control text-uppercase\" name=\"date\"\n                                 onChange={onChange} \n                                 ref={register({ required: true })}\n                                 />\n                                {errors.date && <span className=\"text-danger\">Date is required</span>}\n\n                                <Label for='fromTime'>\n                                 Start Time\n                                  </Label>\n                            \n                                <TimePicker\n                                  showSecond={false}\n                                  // defaultValue={}\n                                  className=\"time-picker\"\n                                  onChange={onHandleTimeChange}\n                                  format=\"h:mm a\"\n                                  minuteStep = { 15 }\n                                  // use12Hours\n                                  inputReadOnly\n                                  />\n                                {errors.from && <span className=\"text-danger\">Time is required</span>}\n\n                                  {/* <Button\n                                  color=\"dark\"\n                                  style = {{marginTop: '2rem'}}\n                                  onClick={toggle}\n                                  block\n                                  >\n                                  Cancel</Button> */}\n                                <div>\n                                  <Button\n                                  color=\"primary\"\n                                  // style = {{marginTop: '2rem'}}\n                                  onClick={onSubmit}\n                                  className={classes.button}\n                                  startIcon={<SaveIcon />}\n                                  variant=\"contained\"\n                                  size=\"large\"\n                                  \n                                  block\n                                  >\n                                  Update Appointment</Button>\n                                  </div>\n                              </FormGroup>\n                              </Form>  \n                        </ModalBody>\n                </Modal>\n            </div>\n\n  );\n};\n\n \nconst mapStateToProps = state => ({\n    user: state.auth.user,\n  });\nexport default connect(mapStateToProps, { deleteAppointment, updateAppointment, clearErrors,\n   getDoctorAppointments,getPatientAppointments })(AppointmentModal);\n","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\auth\\Logout.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\auth\\LoginModal.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\auth\\RegisterModal.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\FilesComponents\\Progress.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\FilesComponents\\Message.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\actions\\uploadActions.js",["317","318","319","320","321"],"import axios from 'axios';\r\n\r\nimport {\r\nADD_DOCTOR,\r\nGET_DOCTORS,\r\nGET_SINGLE_DOCTOR,\r\nDOCTOR_FILTER,\r\nADD_UPLOADS,\r\nGET_UPLOADS\r\n} from './types';\r\nimport { setAlert } from './alertActions';\r\nimport { returnErrors } from './errorActions';\r\nimport { tokenConfig } from './authActions';\r\n\r\n\r\nexport const uploadFiles = (onUploadProgress,file) => async (dispatch , getState) => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    console.log(file)\r\n    \r\n    const config = {     \r\n        onUploadProgress: progressEvent => onUploadProgress(progressEvent)\r\n    }\r\n\r\n    const response = await axios.post('/api/uploads',formData,config)\r\n    .then(res => {\r\n    dispatch({\r\n        type: ADD_UPLOADS,\r\n        payload: res.data\r\n        });\r\n        return res;\r\n        }\r\n        )\r\n    .catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\r\n    console.log(response);\r\n\r\n    return response;\r\n};\r\n\r\n\r\n\r\nexport const getUserFiles = () => (dispatch , getState) => {\r\n    axios.get('/api/uploads', tokenConfig(getState))\r\n    .then(res => {\r\n    dispatch({\r\n    type: GET_UPLOADS,\r\n    payload: res.data\r\n    });\r\n\r\n    console.log(res.data);\r\n    }\r\n    )\r\n    .catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\r\n};","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\Dashboard\\PopUpAlert.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\Dashboard\\ImageModal.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\reducers\\ImageModalReducer.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\reducers\\TableReducer.js",["322"],"import InsertField from '../components/DoctorComponent/Dashboard/InsertField';\nimport ExchangeLink from '../components/DoctorComponent/Dashboard/ExchangeLink';\n\n\n//Initial Data\nconst  initialState = {\n    dashBoardTable: {\n        columns: [\n            { accessor: 'name',   label: 'First Name', priorityLevel: 1, position: 1, minWidth: 150, CustomComponent: InsertField },\n        //    { accessor: 'lastName', label: 'Last Name', priorityLevel: 2, position: 2, minWidth: 150, },\n            { accessor: 'email',  label: 'Email', priorityLevel: 2, position: 2, minWidth: 150 ,CustomComponent: InsertField },\n            { accessor: 'phone',   label: 'Phone', priorityLevel: 3, position: 3, minWidth: 150, sortable: false, CustomComponent: InsertField},\n        //   //  { accessor: 'amountSpent', label: 'Total Spent', priorityLevel: 4, position: 4, minWidth: 150, CustomComponent: ExchangeLink },\n        //   //  { accessor: 'chargeTo', label: 'Charged To', priorityLevel: 7, position: 5, minWidth: 150, },\n            { accessor: 'date',   label: 'Date', priorityLevel: 4, position: 4, minWidth: 150, sortType: 'date', sortable: false },\n            { accessor: 'time',   label: 'Time', priorityLevel: 5, position: 5, minWidth: 150, sortable: false },\n        //     // { accessor: 'reason', label: 'Reason for Appointment', priorityLevel: 6, position: 6, minWidth: 300, sortable: false, },\n        //     // { accessor: 'status', label: 'Status', priorityLevel: 7, position: 7, minWidth: 300, sortable: false, },\n            { accessor: 'image',  label: 'Photo', priorityLevel: 6, position: 6, minWidth: 200, CustomComponent: InsertField, sortable: false },\n            { accessor: 'action',  label: 'Action', priorityLevel: 7, position: 7, minWidth: 200, CustomComponent: InsertField, sortable: false }\n\n        ],\n        rows: [],\n        defaultSortColumn: 'date',\n    } ,\n\n    appointmentsTable: {\n        columns: [\n            { accessor: 'name',   label: 'First Name', priorityLevel: 1, position: 1, minWidth: 150, CustomComponent: InsertField },\n        //    { accessor: 'lastName', label: 'Last Name', priorityLevel: 2, position: 2, minWidth: 150, },\n          //  { accessor: 'email',  label: 'Email', priorityLevel: 2, position: 2, minWidth: 150 ,CustomComponent: InsertField },\n        //    { accessor: 'phone',   label: 'Phone', priorityLevel: 3, position: 3, minWidth: 150, sortable: false, CustomComponent: InsertField},\n        //   //  { accessor: 'amountSpent', label: 'Total Spent', priorityLevel: 4, position: 4, minWidth: 150, CustomComponent: ExchangeLink },\n        //   //  { accessor: 'chargeTo', label: 'Charged To', priorityLevel: 7, position: 5, minWidth: 150, },\n            { accessor: 'time',   label: 'Time', priorityLevel: 5, position: 5, minWidth: 150, sortable: false },\n        //     // { accessor: 'reason', label: 'Reason for Appointment', priorityLevel: 6, position: 6, minWidth: 300, sortable: false, },\n        //     // { accessor: 'status', label: 'Status', priorityLevel: 7, position: 7, minWidth: 300, sortable: false, },\n            { accessor: 'join',  label: '', priorityLevel: 7, position: 7, minWidth: 200, CustomComponent: InsertField, sortable: false }\n\n        ],\n        rows: [],\n        defaultSortColumn: 'date',\n    },\n\n    patientsTable: {\n        columns: [\n            { accessor: 'name',   label: 'First Name', priorityLevel: 1, position: 1, minWidth: 150, CustomComponent: InsertField },\n        //    { accessor: 'lastName', label: 'Last Name', priorityLevel: 2, position: 2, minWidth: 150, },\n            { accessor: 'email',  label: 'Email', priorityLevel: 2, position: 2, minWidth: 150 ,CustomComponent: InsertField },\n            { accessor: 'phone',   label: 'Phone', priorityLevel: 3, position: 3, minWidth: 150, sortable: false, CustomComponent: InsertField},\n        //   //  { accessor: 'amountSpent', label: 'Total Spent', priorityLevel: 4, position: 4, minWidth: 150, CustomComponent: ExchangeLink },\n        //   //  { accessor: 'chargeTo', label: 'Charged To', priorityLevel: 7, position: 5, minWidth: 150, },\n        //     { accessor: 'date',   label: 'Date', priorityLevel: 4, position: 4, minWidth: 150, sortType: 'date', sortable: false },\n        //     { accessor: 'time',   label: 'Time', priorityLevel: 5, position: 5, minWidth: 150, sortable: false },\n        // //     // { accessor: 'reason', label: 'Reason for Appointment', priorityLevel: 6, position: 6, minWidth: 300, sortable: false, },\n        // //     // { accessor: 'status', label: 'Status', priorityLevel: 7, position: 7, minWidth: 300, sortable: false, },\n        //     { accessor: 'image',  label: 'Photo', priorityLevel: 6, position: 6, minWidth: 200, CustomComponent: InsertField, sortable: false },\n        //     { accessor: 'action',  label: 'Action', priorityLevel: 7, position: 7, minWidth: 200, CustomComponent: InsertField, sortable: false }\n\n        ],\n        rows: [],\n        defaultSortColumn: 'date',\n    } \n}\n\nconst TableReducer = (state = initialState, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n}\n\nexport default TableReducer;\n","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\reducers\\alertReducer.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\reducers\\doctorReducer.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\reducers\\authReducer.js",["323"],"import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    DOCTOR_REGISTRATION,\r\n    UPDATE_PROFILE\r\n  } from '../actions/types';\r\n\r\nexport const initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    isLoading: false,\r\n    user: null,\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case USER_LOADED:\r\n           // if(action.payload){\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload,\r\n               \r\n            }\r\n  \r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n      \r\n            localStorage.setItem('token', action.payload.token);\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload.user\r\n            };\r\n        case DOCTOR_REGISTRATION:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload\r\n            };\r\n\r\n\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                    ...state,\r\n                    ...action.payload,\r\n                    isAuthenticated: true,\r\n                    isLoading: false,\r\n                    user: action.payload\r\n                };\r\n\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n}","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\reducers\\errorReducer.js",["324"],"import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {\r\n    msg: {},\r\n    status: null,\r\n    id: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_ERRORS:\r\n            return {\r\n                msg: action.payload.msg,\r\n                status: action.payload.status,\r\n                id: action.payload.id\r\n            };\r\n        \r\n        case CLEAR_ERRORS:\r\n            return {\r\n                    msg: {},\r\n                    status: null,\r\n                    id: null\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\Dashboard\\ExchangeLink.js",[],"C:\\Users\\Or\\Desktop\\doc-4-november\\client\\src\\components\\DoctorComponent\\Dashboard\\InsertField.js",[],{"ruleId":"325","replacedBy":"326"},{"ruleId":"327","replacedBy":"328"},{"ruleId":"329","severity":1,"message":"330","line":1,"column":28,"nodeType":"331","messageId":"332","endLine":1,"endColumn":36},{"ruleId":"329","severity":1,"message":"333","line":3,"column":19,"nodeType":"331","messageId":"332","endLine":3,"endColumn":30},{"ruleId":"329","severity":1,"message":"334","line":7,"column":8,"nodeType":"331","messageId":"332","endLine":7,"endColumn":19},{"ruleId":"329","severity":1,"message":"335","line":8,"column":8,"nodeType":"331","messageId":"332","endLine":8,"endColumn":19},{"ruleId":"336","severity":1,"message":"337","line":15,"column":10,"nodeType":"338","endLine":15,"endColumn":12,"suggestions":"339"},{"ruleId":"329","severity":1,"message":"330","line":1,"column":27,"nodeType":"331","messageId":"332","endLine":1,"endColumn":35},{"ruleId":"329","severity":1,"message":"340","line":2,"column":16,"nodeType":"331","messageId":"332","endLine":2,"endColumn":26},{"ruleId":"341","severity":1,"message":"342","line":127,"column":39,"nodeType":"343","messageId":"344","endLine":133,"endColumn":5},{"ruleId":"341","severity":1,"message":"342","line":153,"column":41,"nodeType":"343","messageId":"344","endLine":159,"endColumn":7},{"ruleId":"341","severity":1,"message":"342","line":189,"column":39,"nodeType":"343","messageId":"344","endLine":195,"endColumn":5},{"ruleId":"341","severity":1,"message":"342","line":350,"column":43,"nodeType":"343","messageId":"344","endLine":356,"endColumn":8},{"ruleId":"329","severity":1,"message":"330","line":1,"column":15,"nodeType":"331","messageId":"332","endLine":1,"endColumn":23},{"ruleId":"329","severity":1,"message":"345","line":3,"column":8,"nodeType":"331","messageId":"332","endLine":3,"endColumn":15},{"ruleId":"329","severity":1,"message":"346","line":11,"column":10,"nodeType":"331","messageId":"332","endLine":11,"endColumn":22},{"ruleId":"329","severity":1,"message":"335","line":14,"column":8,"nodeType":"331","messageId":"332","endLine":14,"endColumn":19},{"ruleId":"336","severity":1,"message":"347","line":24,"column":8,"nodeType":"338","endLine":24,"endColumn":10,"suggestions":"348"},{"ruleId":"329","severity":1,"message":"330","line":1,"column":16,"nodeType":"331","messageId":"332","endLine":1,"endColumn":24},{"ruleId":"329","severity":1,"message":"345","line":4,"column":8,"nodeType":"331","messageId":"332","endLine":4,"endColumn":15},{"ruleId":"336","severity":1,"message":"349","line":32,"column":8,"nodeType":"338","endLine":32,"endColumn":31,"suggestions":"350"},{"ruleId":"329","severity":1,"message":"351","line":46,"column":11,"nodeType":"331","messageId":"332","endLine":46,"endColumn":32},{"ruleId":"329","severity":1,"message":"352","line":62,"column":11,"nodeType":"331","messageId":"332","endLine":62,"endColumn":22},{"ruleId":"329","severity":1,"message":"353","line":1,"column":17,"nodeType":"331","messageId":"332","endLine":1,"endColumn":26},{"ruleId":"329","severity":1,"message":"330","line":1,"column":28,"nodeType":"331","messageId":"332","endLine":1,"endColumn":36},{"ruleId":"329","severity":1,"message":"345","line":2,"column":8,"nodeType":"331","messageId":"332","endLine":2,"endColumn":15},{"ruleId":"329","severity":1,"message":"354","line":5,"column":8,"nodeType":"331","messageId":"332","endLine":5,"endColumn":27},{"ruleId":"329","severity":1,"message":"355","line":19,"column":3,"nodeType":"331","messageId":"332","endLine":19,"endColumn":9},{"ruleId":"329","severity":1,"message":"356","line":20,"column":3,"nodeType":"331","messageId":"332","endLine":20,"endColumn":15},{"ruleId":"329","severity":1,"message":"357","line":24,"column":3,"nodeType":"331","messageId":"332","endLine":24,"endColumn":6},{"ruleId":"329","severity":1,"message":"358","line":31,"column":1,"nodeType":"331","messageId":"332","endLine":31,"endColumn":6},{"ruleId":"329","severity":1,"message":"359","line":4,"column":1,"nodeType":"331","messageId":"332","endLine":4,"endColumn":11},{"ruleId":"329","severity":1,"message":"360","line":10,"column":10,"nodeType":"331","messageId":"332","endLine":10,"endColumn":22},{"ruleId":"361","severity":1,"message":"362","line":30,"column":33,"nodeType":"343","messageId":"363","endLine":30,"endColumn":35},{"ruleId":"329","severity":1,"message":"364","line":79,"column":11,"nodeType":"331","messageId":"332","endLine":79,"endColumn":17},{"ruleId":"329","severity":1,"message":"365","line":17,"column":10,"nodeType":"331","messageId":"332","endLine":17,"endColumn":12},{"ruleId":"329","severity":1,"message":"366","line":4,"column":8,"nodeType":"331","messageId":"332","endLine":4,"endColumn":13},{"ruleId":"329","severity":1,"message":"367","line":6,"column":8,"nodeType":"331","messageId":"332","endLine":6,"endColumn":18},{"ruleId":"329","severity":1,"message":"368","line":18,"column":20,"nodeType":"331","messageId":"332","endLine":18,"endColumn":32},{"ruleId":"329","severity":1,"message":"330","line":1,"column":17,"nodeType":"331","messageId":"332","endLine":1,"endColumn":25},{"ruleId":"329","severity":1,"message":"353","line":1,"column":27,"nodeType":"331","messageId":"332","endLine":1,"endColumn":36},{"ruleId":"329","severity":1,"message":"369","line":8,"column":33,"nodeType":"331","messageId":"332","endLine":8,"endColumn":54},{"ruleId":"329","severity":1,"message":"335","line":10,"column":8,"nodeType":"331","messageId":"332","endLine":10,"endColumn":19},{"ruleId":"329","severity":1,"message":"370","line":15,"column":12,"nodeType":"331","messageId":"332","endLine":15,"endColumn":14},{"ruleId":"336","severity":1,"message":"371","line":33,"column":7,"nodeType":"338","endLine":33,"endColumn":20,"suggestions":"372"},{"ruleId":"329","severity":1,"message":"373","line":48,"column":1,"nodeType":"331","messageId":"332","endLine":48,"endColumn":12},{"ruleId":"329","severity":1,"message":"374","line":49,"column":1,"nodeType":"331","messageId":"332","endLine":49,"endColumn":18},{"ruleId":"329","severity":1,"message":"375","line":50,"column":1,"nodeType":"331","messageId":"332","endLine":50,"endColumn":14},{"ruleId":"329","severity":1,"message":"376","line":51,"column":1,"nodeType":"331","messageId":"332","endLine":51,"endColumn":17},{"ruleId":"329","severity":1,"message":"377","line":55,"column":10,"nodeType":"331","messageId":"332","endLine":55,"endColumn":18},{"ruleId":"329","severity":1,"message":"370","line":8,"column":12,"nodeType":"331","messageId":"332","endLine":8,"endColumn":14},{"ruleId":"329","severity":1,"message":"353","line":1,"column":27,"nodeType":"331","messageId":"332","endLine":1,"endColumn":36},{"ruleId":"329","severity":1,"message":"359","line":4,"column":1,"nodeType":"331","messageId":"332","endLine":4,"endColumn":11},{"ruleId":"329","severity":1,"message":"373","line":5,"column":1,"nodeType":"331","messageId":"332","endLine":5,"endColumn":12},{"ruleId":"329","severity":1,"message":"374","line":6,"column":1,"nodeType":"331","messageId":"332","endLine":6,"endColumn":18},{"ruleId":"329","severity":1,"message":"375","line":7,"column":1,"nodeType":"331","messageId":"332","endLine":7,"endColumn":14},{"ruleId":"329","severity":1,"message":"377","line":11,"column":10,"nodeType":"331","messageId":"332","endLine":11,"endColumn":18},{"ruleId":"329","severity":1,"message":"378","line":2,"column":8,"nodeType":"331","messageId":"332","endLine":2,"endColumn":20},{"ruleId":"379","severity":1,"message":"380","line":21,"column":1,"nodeType":"381","endLine":83,"endColumn":2},{"ruleId":"379","severity":1,"message":"380","line":9,"column":1,"nodeType":"381","endLine":27,"endColumn":2},"no-native-reassign",["382"],"no-negated-in-lhs",["383"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'BookingItem' is defined but never used.","'appointment' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getPatientAppointments' and 'id'. Either include them or remove the dependency array. If 'getPatientAppointments' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["384"],"'useHistory' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'connections', 'socket', 'connections'.","ArrowFunctionExpression","unsafeRefs","'spinner' is defined but never used.","'clickedImage' is defined but never used.","React Hook useEffect has missing dependencies: 'getDoctorPatients' and 'id'. Either include them or remove the dependency array. If 'getDoctorPatients' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["385"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["386"],"'getAppointmentsLength' is assigned a value but never used.","'dateComapre' is assigned a value but never used.","'useEffect' is defined but never used.","'AppointmentCalendar' is defined but never used.","'status' is assigned a value but never used.","'prescription' is assigned a value but never used.","'_id' is assigned a value but never used.","'image' is assigned a value but never used.","'ADD_DOCTOR' is defined but never used.","'returnErrors' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'doctor' is assigned a value but never used.","'da' is defined but never used.","'axios' is defined but never used.","'fileUpload' is defined but never used.","'setUserState' is assigned a value but never used.","'getDoctorAppointments' is defined but never used.","'id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["387"],"'GET_DOCTORS' is defined but never used.","'GET_SINGLE_DOCTOR' is defined but never used.","'DOCTOR_FILTER' is defined but never used.","'GET_APPOINTMENTS' is defined but never used.","'setAlert' is defined but never used.","'ExchangeLink' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},"Update the dependencies array to be: [getPatientAppointments, id]",{"range":"396","text":"397"},"Update the dependencies array to be: [getDoctorPatients, id]",{"range":"398","text":"399"},"Update the dependencies array to be: [getDoctorAppointments, id]",{"range":"400","text":"401"},"Update the dependencies array to be: [props, selectedDay]",{"range":"402","text":"403"},[565,567],"[getPatientAppointments, id]",[756,758],"[getDoctorPatients, id]",[978,1001],"[getDoctorAppointments, id]",[970,983],"[props, selectedDay]"]